# Generated by Django 2.2.10 on 2020-10-20 06:45

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('block', models.IntegerField(null=True)),
                ('unit', models.IntegerField(null=True)),
                ('time', models.TimeField()),
                ('number_of_sample', models.IntegerField(null=True)),
                ('count_sampling_done', models.IntegerField(null=True)),
                ('count_principle', models.IntegerField(null=True)),
                ('count_services', models.IntegerField(null=True)),
                ('count_circulation', models.IntegerField(null=True)),
                ('architectural_work', models.FloatField(null=True)),
                ('floor_finishes', models.FloatField(null=True)),
                ('internal_wall', models.FloatField(null=True)),
                ('ceiling', models.FloatField(null=True)),
                ('door', models.FloatField(null=True)),
                ('window', models.FloatField(null=True)),
                ('internal_fixtures', models.FloatField(null=True)),
                ('roof', models.FloatField(null=True)),
                ('external_wall', models.FloatField(null=True)),
                ('apron_parameter_drain', models.FloatField(null=True)),
                ('carpark_carporch', models.FloatField(null=True)),
                ('material_functional_test', models.FloatField(null=True)),
                ('total', models.FloatField(null=True)),
                ('picture', models.FileField(null=True, upload_to='')),
                ('external_works', models.FloatField(null=True)),
                ('me_fittings', models.FloatField(null=True)),
                ('qlassic_score_mockup', models.FloatField(null=True)),
                ('qlassic_score', models.FloatField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DefectGroup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('defect_name', models.CharField(blank=True, max_length=255)),
                ('created_by', models.CharField(blank=True, max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('element_name', models.CharField(blank=True, max_length=255)),
                ('created_by', models.CharField(blank=True, max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='QlassicAssessmentApplication',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('application_date', models.DateTimeField()),
                ('proposed_date', models.DateTimeField()),
                ('assessment_start_date', models.DateTimeField()),
                ('assessment_end_date', models.DateTimeField()),
                ('number_of_days', models.IntegerField(null=True)),
                ('status', models.CharField(blank=True, max_length=255)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
    ]
