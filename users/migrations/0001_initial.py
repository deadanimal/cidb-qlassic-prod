# Generated by Django 2.2.10 on 2021-02-13 05:24

import core.helpers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=30, unique=True, verbose_name='email address')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('code_id', models.CharField(blank=True, max_length=50, null=True)),
                ('icno', models.CharField(max_length=14, null=True, verbose_name='Identity Card Number')),
                ('name', models.CharField(max_length=100, null=True)),
                ('gender', models.CharField(choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=10, null=True)),
                ('marital_status', models.CharField(choices=[('SINGLE', 'SINGLE'), ('MARRIED', 'MARRIED'), ('DIVORCED', 'DIVORCED')], max_length=10, null=True)),
                ('greencard_no', models.CharField(blank=True, max_length=16, null=True, verbose_name='Green card number')),
                ('greencard_exp_date', models.DateField(blank=True, null=True, verbose_name="Green card's expired date")),
                ('organization', models.TextField(max_length=50, null=True)),
                ('position', models.CharField(max_length=50, null=True)),
                ('role', models.CharField(choices=[('superadmin', 'Super Admin'), ('staff', 'Staff'), ('contractor', 'Contractor'), ('assessor', 'Assessor'), ('trainer', 'Trainer'), ('trainee', 'Trainee'), ('applicant', 'Applicant'), ('casc_reviewer', 'CASC Reviewer'), ('casc_verifier', 'CASC Verifier'), ('casc_approver', 'CASC Approver'), ('cidb_reviewer', 'CIDB Reviewer'), ('cidb_verifier', 'CIDB Verifier'), ('cidb_approver', 'CIDB Approver')], max_length=50, null=True)),
                ('transport_model', models.CharField(blank=True, max_length=50, null=True, verbose_name='Transport Model')),
                ('transport_cc', models.FloatField(blank=True, null=True, verbose_name='CC')),
                ('transport_registration_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Transport Registration Number')),
                ('address1', models.CharField(max_length=100, null=True)),
                ('address2', models.CharField(max_length=100, null=True)),
                ('postcode', models.CharField(max_length=10, null=True, verbose_name='Postal code')),
                ('city', models.CharField(max_length=50, null=True)),
                ('state', models.CharField(choices=[('MELAKA', 'MELAKA'), ('JOHOR', 'JOHOR'), ('NEGERI SEMBILAN', 'NEGERI SEMBILAN'), ('PAHANG', 'PAHANG'), ('TERENGGANU', 'TERENGGANU'), ('KELANTAN', 'KELANTAN'), ('PERAK', 'PERAK'), ('PERLIS', 'PERLIS'), ('KEDAH', 'KEDAH'), ('SELANGOR', 'SELANGOR'), ('WILAYAH PERSEKUTUAN KUALA LUMPUR', 'KUALA LUMPUR'), ('SABAH', 'SABAH'), ('SARAWAK', 'SARAWAK'), ('PULAU PINANG', 'PULAU PINANG')], max_length=50, null=True)),
                ('office_no', models.CharField(max_length=15, null=True, verbose_name='Office phone number')),
                ('hp_no', models.CharField(max_length=15, null=True, verbose_name='Mobile number')),
                ('fax_no', models.CharField(max_length=15, null=True, verbose_name='Fax number')),
                ('picture', models.FileField(blank=True, null=True, upload_to=core.helpers.PathAndRename('images'), verbose_name='Profile picture')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.CharField(max_length=50, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('modified_by', models.CharField(max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year_from', models.IntegerField(null=True, verbose_name='Year start')),
                ('year_to', models.IntegerField(null=True, verbose_name='Year end')),
                ('position', models.CharField(max_length=50, null=True)),
                ('company', models.CharField(max_length=50, null=True)),
                ('created_by', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(max_length=50, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('trainer_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Trainer number')),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Assessor',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('qia_id', models.CharField(blank=True, max_length=50, null=True)),
                ('qca_id', models.CharField(blank=True, max_length=50, null=True)),
                ('assessor_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Assessor number')),
                ('assessor_type', models.CharField(choices=[('QIA', 'QLASSIC Industry Assessor'), ('QCA', 'QLASSIC CIDB Assessor')], default='QIA', max_length=50, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(blank=True, max_length=50, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='AcademicQualification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('year', models.IntegerField(null=True, verbose_name='Graduation year')),
                ('institution', models.CharField(max_length=50, null=True, verbose_name='Name of institution')),
                ('qualification', models.CharField(choices=[('spm', 'SPM'), ('diploma', 'Diploma'), ('degree', 'Degree'), ('master', 'Master'), ('phd', 'PHD')], max_length=50, null=True)),
                ('program', models.CharField(max_length=50, null=True, verbose_name='Academic program')),
                ('created_by', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_by', models.CharField(max_length=50, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
